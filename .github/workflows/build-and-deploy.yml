name: Build & Deploy Splash Docker

permissions:
  contents: read
  packages: write # Needed for GHCR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ghcr.io/the-jade-platform/splash-page:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ghcr.io/the-jade-platform/splash-page:latest .

      - name: Push Docker image
        run: docker push ghcr.io/the-jade-platform/splash-page:latest

  deploy:
    needs: build-and-push # Wait for build-and-push to finish
    if: ${{ success() }} # Only run if the previous job succeeded
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Pull the latest image
            docker pull ghcr.io/the-jade-platform/splash-page:latest

            # Stop & remove old container if it exists by name
            if [ "$(docker ps -aq -f name=splash-page)" ]; then
              echo "Stopping and removing old splash-page container..."
              docker stop splash-page || true
              docker rm splash-page || true
            fi

            # Free host port 3001 if anything is listening
            if lsof -i :3001 >/dev/null 2>&1; then
              echo "Port 3001 is in use on host, killing process..."
              sudo fuser -k 3001/tcp
            fi

            # Free port 3001 if another docker container is publishing it
            if docker ps --format '{{.ID}} {{.Ports}}' | grep -q '0.0.0.0:3001'; then
              echo "Port 3001 is in use by another container, removing it..."
              docker ps --format '{{.ID}} {{.Ports}}' | grep '0.0.0.0:3001' | awk '{print $1}' | xargs -r docker rm -f
            fi

            # Start new container on host port 3001 â†’ container port 3001
            docker run -d --name splash-page -p 3001:3001 ghcr.io/the-jade-platform/splash-page:latest
